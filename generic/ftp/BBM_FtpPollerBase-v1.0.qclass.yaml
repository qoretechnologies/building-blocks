# This is a generated file, don't edit!
type: class
name: BBM_FtpPollerBase
desc: >+
    ## Summary


    Generic building block class for polling for files from an FTP server.


    This class is meant to be used as a base class for interfaces (normally a
    job or a service) that provide FTP polling as an event connector.


    If config item `ftp-polling-file-connection` is set, then files are streamed
    efficiently to the given local file system location and not stored in
    memory.  If this config item is not set, then all files are transferred and
    stored in main memory, which can cause problems with very large files.


    If uploads to the FTP server are not atomic, the `ftp-polling-minage` config
    item can be used to ensure that files are only polled after they have been
    present on the FTP server for a defined period of time, which should be
    greater than the maximum time required to transfer the largest files.


    Note that this class can be used in either a job or a service to provide
    regular polling for files from an FTP server.  Use in a job is encouraged,
    as the job schedule is easily controlled by operational users and is the
    pollijng schedule, additionally the results of each polling operation are
    exposed in the UI and in the API as job results, making it easier to monitor
    the FTP polling status.


    ## Connectors


    ### Input/Output Connector `pollForFiles`


    Used to poll for files once and return file data as output for all files
    polled; this connector is useful in a job to poll for files regularly
    according to the job's schedule.  Input data is ignored.


    ### Input/Output Connector `start`


    This connector can be used in a service to poll in a service's `start()`
    method in a background thread.  In order to use this class's `ftpFileEvent`
    connector, this connector must be used as the service's `start()` method.  


    Input data is ignored and passed through to the output data.


    ### Input/Output Connector `stop`


    This connector can be used in a service to stop polling in a service's
    `stop()` method.   In order to use this class's `ftpFileEvent` connector,
    this connector must be used as the service's `stop()` method.  


    Input data is ignored and passed through to the output data.


    ### Event Connector `ftpFileEvent`


    This event connector can be used in a service to process file events once
    they have been polled and fully transferred to the server.  In order to use
    this connector, the `start` and `stop` connectors must be used in a
    service's `start()` and `stop()` methods to start and stop the polling
    thread, respectively.


    ## References


    See:

    - class building block: `BBM_FtpPollerCreateOrder`

    - job base class: `BBM_FtpPollerCreateOrderJob`

lang: qore
author:
  - Qore Technologies, s.r.o.
class-connectors:
  - name: pollForFiles
    type: input-output
    method: pollForFiles
  - name: start
    type: input-output
    method: start
  - name: stop
    type: input-output
    method: stop
  - name: ftpFileEvent
    type: event
    method: ftpFileEvent
    output-provider:
        type: type
        name: qoretechnologies
        can_manage_fields: false
        path: /building-blocks/ftp/event
requires:
  - BBM_RegularExpressions
version: '1.0'
code: BBM_FtpPollerBase-v1.0.qclass
config-items:
  - name: ftp-polling-connection-name
    description: the name of the FTP connection
    config_group: FTP Polling
    strictly_local: true
    type: connection
  - name: ftp-polling-mask
    description: >
        "the filename mask for files to match when polling; is a regular expression
        if \"ftp-polling-mask-regex\" is set; if not, then this value is a glob
        value"
    strictly_local: true
    config_group: FTP Polling
  - name: ftp-polling-mask-regex
    default_value:
        false
    type: bool
    description: if "ftp-polling-mask" is a regular expression or not
    strictly_local: true
    config_group: FTP Polling
  - name: ftp-polling-regex-options
    default_value:
        "NONE"
    allowed_values:
      - "NONE"
      - "IGNORE-CASE"
      - "MULTILINE"
      - "IGNORE-CASE and MULTILINE"
    description: >
        "regular expression options for FTP polling; only used if
        \"ftp-polling-mask-regex\" is true"
    strictly_local: true
    config_group: FTP Polling
  - name: ftp-polling-interval-secs
    default_value:
        60
    description: >-
        The polling interval in seconds for when this class is used in a service
        with the `start` and `stop` and `ftpFileEvent` connectors.
    
    
        This config item is only used when this class is used in the background
        polling thread in a Qorus service with the above-mentioned connectors; it is
        ignored in all other cases.
    config_group: FTP Polling
    strictly_local: true
    type: int
  - name: ftp-polling-file-connection
    default_value:
        null
    description: >
        the name of a local file connection where to save files;
        \"ftp-polling-file-name\" can be set to give a subdirectory path offset from
        the connection; note that if this configuration item is not set, then files
        are retrieved to memory, this should only be done for relatively small
        files; if files can be large, then it's recommended to set this option and
        process files directly from the filesystem
    config_group: FTP File Options
    strictly_local: true
    type: "*connection"
  - name: ftp-polling-file-name
    default_value:
        null
    type: "*string"
    description: >
        "a template string giving the target local file name as offset from the
        connection identified with \"ftp-polling-file-connection\"; ignored if
        \"ftp-polling-file-connection\" is not set; local context includes the event
        information (ex: \"subdir/$local:name\")"
    strictly_local: true
    config_group: FTP File Options
  - name: ftp-polling-file-temp-template
    default_value:
        ".tmp.$local:{name}.part"
    description: >
        "the template for the temporary filename used while transferring the file,
        the file event info is added to the local context (ex: the target filename
        is available as $local:name)"
    strictly_local: true
    config_group: FTP Polling Fine Tuning
  - name: ftp-polling-minage
    default_value:
        0
    type: int
    description: >-
        the minimum age of the file in seconds before it will be visible to the
        poller
    strictly_local: true
    config_group: FTP Polling Fine Tuning
  - name: ftp-polling-encoding
    default_value:
        null
    type: "*string"
    description: the character encoding for any text files received
    strictly_local: true
    config_group: FTP Polling Fine Tuning
  - name: ftp-polling-delete-file
    default_value:
        true
    type: bool
    description: >
        if true then files will be deleted after the polling action has been
        executed on them; if false then \"ftp-polling-move-target\" must be set
    strictly_local: true
    config_group: FTP Polling Post Processing
  - name: ftp-polling-move-target
    default_value:
        null
    type: "*string"
    description: >
        "the directory and target filename for moving / renaming files after the
        polling action has been executed, only used if \"ftp-polling-delete-file\"
        is false; file event info is added to the local context (ex:
        \"complete/$local:{name}\")"
    strictly_local: true
    config_group: FTP Polling Post Processing
