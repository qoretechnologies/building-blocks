# name: BB_SftpPollerCreateOrder
# version: 1.0
# desc: class for polling for files from an SFTP server and creating a workflow order from them
# author: Qore Technologies, s.r.o.
# requires: BB_SftpPollerBase, BB_CreateOrder
%new-style
%require-types
%strict-args
%enable-all-warnings

%requires SftpPoller

#! this base building block polls an SFTP server for files
/**
*/
class BB_SftpPollerCreateOrder inherits BB_SftpPollerBase, BB_CreateOrder {
    #! config items for this object
    private *hash<string, hash<ConfigItemInfo>> getConfigItems() {
        return BB_SftpPollerBase::getConfigItems()
            + BB_SftpPollerBase::getConfigItems() + {
            "sftp-file-save-local": <ConfigItemInfo>{
                "type": "bool",
                "default_value": False,
                "description": "if true then a local file will be created and the \"path\" key will be included in "
                    "the workflow mapper context data; in this case the \"sftp-file-connection\" config item must"
                    "also be set",
                "strictly_local": True,
                "config_group": "SFTP File Options",
            },
            "sftp-file-connection": <ConfigItemInfo>{
                "type": "*string",
                "default_value": NOTHING,
                "description": "the name of a file connection where to save files; used if \"sftp-file-save-local\" "
                    "is true; also \"sftp-file-path\" can be set to give a subdirectory path offset from the "
                    "connection",
                "strictly_local": True,
                "config_group": "SFTP File Options",
            },
            "sftp-file-path": <ConfigItemInfo>{
                "type": "*string",
                "default_value": NOTHING,
                "description": "a subdirectory path offset from the connection; only used if "
                    "\"sftp-file-save-local\" is set",
                "strictly_local": True,
                "config_group": "SFTP File Options",
            },
        };
    }

    #! called for each matching file individually whenever matching files are polled with the list of matching file names; if any error occurs here, the error is logged and the polling operation is retried
    /** @param fih a hash of file data and information with the following keys:
        - \c name: the name of the file, link, or directory
        - \c size: the size of the file in bytes
        - \c uid: the UID of the owner of the file
        - \c gid: the GID of the owner of the file
        - \c mode: the permissions / mode of the file
        - \c atime: the last accessed date/time of the file
        - \c mtime: the last modified date/time of the file
        - \c type: the type of file; one of: \c "REGULAR", \c "DIRECTORY", \c "SYMBOLIC-LINK", \c "BLOCK-DEVICE",
          \c "CHARACTER-DEVICE", \c "FIFO", \c "SYMBOLIC-LINK", \c "SOCKET", or \c "UNKNOWN"
        - \c perm: a string giving UNIX-style permissions for the file (ex: "-rwxr-xr-x")
        - \c data: the file's data; this will be a string unless the \a "binary" option is set to
          @ref Qore::True "True", in which case this key is assigned to the files binary data; this hash key is only
          present if \c skip_file_content_retrieval was @ref Qore::False "False" in the @ref SftpPoller::SftpPoller::constructor options
        - \c filepath: the remote filepath relative to SFTP root directory
    */
    singleFileEvent(hash<SftpPollerFileEventInfo> fih) {
        int wfiid = createWorkflowOrder(fih);

    }
}
# END
