# -*- mode: qore; indent-tabs-mode: nil -*-

# name: BB_RestServiceBase
# version: 1.0
# desc: base class for REST handler services
# author: Qore Technologies, s.r.o.
## requires: BB_HttpServiceGenericBase

%new-style
%require-types
%strict-args
%enable-all-warnings

# import the Swagger module for Swagger 2.0 REST schema validation
%requires Swagger

class BB_RestHandlerBase inherits AbstractServiceRestHandler {
    constructor(AbstractAuthenticator auth = new QorusParametrizedAuthenticator(ServiceApi::getConfigItemValue("rest-auth-name")))
        : AbstractServiceRestHandler(
        ServiceApi::getConfigItemValue("rest-root-uri"),
        False,
        auth,
        BB_RestHandlerBase::getSwaggerSchema()) {
    }

    private static *SwaggerSchema getSwaggerSchema() {
        *string schema = ServiceApi::getConfigItemValue("rest-swagger-schema");
        if (!schema) {
            return;
        }
        return SwaggerLoader::fromString(ServiceApi::getResourceData(schema).toString(), False);
    }
}

class BB_RestServiceBase inherits BB_HttpServiceGenericBase {
    private *hash<string, hash<ConfigItemInfo>> getConfigItemsImpl() {
        return BB_HttpServiceGenericBase::getConfigItemsImpl() + {
            "rest-root-uri": <ConfigItemInfo>{
                "description": "The root URI path for the REST service",
                "strictly_local": True,
                "config_group": "Rest Handler",
            },
            "rest-auth-name": <ConfigItemInfo>{
                "default_value": "auth",
                "description": "The name of the HTTP authentication label",
                "strictly_local": True,
                "config_group": "Rest Handler",
            },
            "rest-swagger-schema": <ConfigItemInfo>{
                "type": "*string",
                "description": "the name of the resource with the Swagger schema for this service",
                "default_value": NOTHING,
                "strictly_local": True,
                "config_group": "Rest Handler",
            },
        };
    }
}
# END
