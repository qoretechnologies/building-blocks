# -*- mode: qore; indent-tabs-mode: nil -*-

# name: BB_HttpServiceBase
# version: 1.0
# desc: base class for HTTP handler services
# author: Qore Technologies, s.r.o.
# requires: BB_HttpServiceGenericBase

%new-style
%require-types
%strict-args
%enable-all-warnings

class BB_HttpHandlerBase inherits AbstractServiceHttpHandler {
    constructor(AbstractAuthenticator auth = new QorusParametrizedAuthenticator(ServiceApi::getConfigItemValue("http-auth-name")))
        : AbstractServiceRestHandler(
        ServiceApi::getConfigItemValue("http-root-uri"),
        ServiceApi::getConfigItemValue("http-match-content-types"),
        ServiceApi::getConfigItemValue("http-match-headers"),
        auth),
        ServiceApi::getConfigItemValue("http-root-uri-is-regex")) {
    }
}

class BB_RestServiceBase inherits BB_HttpServiceGenericBase {
    private *hash<string, hash<ConfigItemInfo>> getConfigItemsImpl() {
        return BB_HttpServiceGenericBase::getConfigItemsImpl() + {
            "http-root-uri": <ConfigItemInfo>{
                "description": "The root URI path for the HTTP service",
                "strictly_local": True,
                "config_group": "HTTP Handler",
            },
            "http-root-uri-is-regex": <ConfigItemInfo>{
                "type": "bool",
                "default_value": False,
                "description": "set to true if 'root-uri' is a regular expression pattern",
                "config_group": "HTTP Handler",
            },
            "http-auth-name": <ConfigItemInfo>{
                "default_value": "auth",
                "description": "The name of the HTTP authentication label",
                "strictly_local": True,
                "config_group": "HTTP Handler",
            },
            "http-match-content-types": <ConfigItemInfo>{
                "type": "*list",
                "default_value": NOTHING,
                "description": "an optional list of string content types that will cause external requests to match this handler",
                "config_group": "HTTP Handler",
            },
            "http-match-headers": <ConfigItemInfo>{
                "type": "*list",
                "default_value": NOTHING,
                "description": "an optional list of string header names (in lower case) that will cause external requests with those headers to match this handler",
                "config_group": "HTTP Handler",
            },
        };
    }
}
# END
