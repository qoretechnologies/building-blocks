#!/usr/bin/env qore
# -*- mode: qore; indent-tabs-mode: nil -*-

%require-types
%strict-args
%new-style
%enable-all-warnings

%exec-class BBM_RestServiceBaseTest

%requires QorusInterfaceTest

class BBM_RestServiceBaseTest inherits QorusServiceTest {
    constructor() : QorusServiceTest("BBM_KafkaConsumerTest", "1.0", \ARGV, Opts) {
        addTestCase("test", \test());
        set_return_value(main());
    }

    private usageIntern(int offset = OffsetColumn) {
        TestReporter::usageIntern(OffsetColumn);
    }

    test() {
        # unload consumer in case it's loaded
        qrest.put("services/BBM_KafkaConsumerTest/unload");
        # load consumer and producer services
        qrest.put("services/BBM_KafkaConsumerTest/load");
        on_exit {
            qrest.put("services/BBM_KafkaConsumerTest/unload");
        }
        qrest.put("services/BBM_KafkaProducerTest/load");
        on_exit {
            qrest.put("services/BBM_KafkaProducerTest/unload");
        }

        hash<auto> msg = {
            "topic": "quickstart-events",
            "key": get_random_string(),
            "value": get_random_string(),
        };
        qrest.put("services/BBM_KafkaProducerTest/sendMessage/call", {"args": msg});
        # check messages
        assertEq(msg, qrest.put("services/BBM_KafkaConsumerTest/getMessages/call")[0]{keys msg});
    }
}
