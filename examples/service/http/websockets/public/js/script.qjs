'use strict';

// server-side template rendering
const ws_server = '{{"ws" + ($ctx.ssl ? "s" : "") + "://" + $ctx.hdr.host + "/" + UserApi::getConfigItemValue("websockets-root-uri")}}';

const outputYou = document.querySelector('.output-you');
//console.log("you: ", outputYou);
const outputBot = document.querySelector('.output-bot');
//console.log("bot: ", outputBot);

function synthVoice(text) {
    const synth = window.speechSynthesis;
    const utterance = new SpeechSynthesisUtterance();
    utterance.text = text;
    synth.speak(utterance);
}

var socket;

function start() {
    socket = new WebSocket(ws_server);

    socket.addEventListener('message', function (event) {
        console.log('Message from server ', event.data);

        synthVoice(event.data);

        if (event.data == '') event.data = '(No answer...)';
        outputBot.textContent = event.data;
    });

    socket.onclose = function(){
        // Try to reconnect in 5 seconds
        setTimeout(function() {
            start();
        }, 5000);
    };
}

start();

const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
const recognition = new SpeechRecognition();

recognition.lang = 'en-US';
recognition.interimResults = false;
recognition.maxAlternatives = 1;

document.querySelector('button').addEventListener('click', () => {
    recognition.start();
});

recognition.addEventListener('speechstart', () => {
    console.log('Speech has been detected.');
});

recognition.addEventListener('result', (e) => {
    console.log('Result has been detected.');

    let last = e.results.length - 1;
    let text = e.results[last][0].transcript;

    outputYou.textContent = text;
    console.log('Confidence: ' + e.results[0][0].confidence);

    socket.send(text);
});

recognition.addEventListener('speechend', () => {
    recognition.stop();
});

recognition.addEventListener('error', (e) => {
    outputBot.textContent = 'Error: ' + e.error;
});
